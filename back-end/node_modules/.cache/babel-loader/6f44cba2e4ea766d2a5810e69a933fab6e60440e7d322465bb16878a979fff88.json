{"ast":null,"code":"var _jsxFileName = \"/Users/sathwikreddydanda/Desktop/NBAD/FinalProject/src/Visuals/visuals.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport './visuals.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Visuals() {\n  _s();\n  const [chartData, setChartData] = useState({\n    datasets: [{\n      budget: [],\n      expense: [],\n      backgroundColor: []\n    }],\n    labels1: [],\n    labels2: []\n  });\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [dataExists, setDataExists] = useState(false);\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  function getRandomColor(previousColors) {\n    const letters = '0123456789ABCDEF';\n    let color;\n    do {\n      color = '#';\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n    } while (previousColors.includes(color));\n    return color;\n  }\n  const fetchData = async (url, updateFunction) => {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId');\n    try {\n      const res = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (res.data && res.data.length > 0) {\n        const updatedData = {\n          ...chartData\n        };\n        for (let i = 0; i < res.data.length; i++) {\n          updatedData.datasets[0].budget[i] = res.data[i].budget;\n          updatedData.datasets[0].expense[i] = res.data[i].expense;\n          updatedData.datasets[0].backgroundColor[i] = getRandomColor(chartData.datasets[0].backgroundColor);\n          updateFunction(updatedData, res.data[i].category);\n        }\n        setChartData(updatedData);\n        setDataExists(true);\n        setDataLoaded(true);\n      } else {\n        setDataExists(false);\n        setDataLoaded(true);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    if (selectedMonth) {\n      const url = `http://localhost:3002/get-budgets/${localStorage.getItem('userId')}?month=${selectedMonth}`;\n      fetchData(url, (data, category) => {\n        data.labels1.push(category);\n      });\n    }\n  }, [selectedMonth]);\n  useEffect(() => {\n    if (selectedMonth) {\n      const url = `http://localhost:3002/get-expenses/${localStorage.getItem('userId')}?month=${selectedMonth}`;\n      fetchData(url, (data, category) => {\n        data.labels2.push(category);\n      });\n    }\n  }, [selectedMonth]);\n  const createChart = (chartRef, type, labels, budget, expenses) => {\n    if (chartRef.current) {\n      const chart = new Chart(chartRef.current, {\n        type: type,\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'Budget',\n            data: budget,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }, {\n            label: 'Expenses',\n            data: expenses,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              stacked: false\n            },\n            y: {\n              stacked: false\n            }\n          }\n        }\n      });\n      return () => {\n        chart.destroy();\n      };\n    }\n  };\n  const chartRef = useRef(null);\n  const expenseRef = useRef(null);\n  const chart1Ref = useRef(null);\n  const chart2Ref = useRef(null);\n  const chart3Ref = useRef(null);\n  const chart4Ref = useRef(null);\n  const chart5Ref = useRef(null);\n  useEffect(() => createPolarareaChart(chartRef, dataSource.datasets[0].budget, dataSource.labels1), [dataSource]);\n  useEffect(() => createPolarareaChart(expenseRef, dataSource.datasets[0].expense, dataSource.labels2), [dataSource]);\n  useEffect(() => createGroupedBarChart(chart1Ref, dataSource.labels1, dataSource.datasets[0].budget, dataSource.datasets[0].expense), [dataSource]);\n  useEffect(() => createRadarChart(chart2Ref, dataSource.labels1, dataSource.datasets[0].budget, dataSource.datasets[0].expense), [dataSource]);\n  useEffect(() => createdonutChart(chart3Ref, dataSource.datasets[0].budget, dataSource.labels1), [dataSource]);\n  useEffect(() => createdonutChart(chart4Ref, dataSource.datasets[0].expense, dataSource.labels1), [dataSource]);\n  useEffect(() => createChart(chart5Ref, dataSource.labels1, dataSource.datasets[0].budget, dataSource.datasets[0].expense), [dataSource]);\n  const renderCharts = () => {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"PolarArea Chart - Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: chartRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"PolarArea Chart - Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: expenseRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Grouped Bar Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: chart1Ref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Radar Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: chart2Ref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Donut Chart - Budgets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: chart3Ref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Donut Chart - Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: chart4Ref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Combo Chart - Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: chart5Ref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"visuals-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"months\",\n        children: \"Select Month:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"months\",\n        onChange: e => setSelectedMonth(e.target.value),\n        value: selectedMonth,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), months.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: month,\n          children: month\n        }, month, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), dataLoaded ? dataExists ? renderCharts() : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There is no sufficient data, please create some to display the charts.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(Visuals, \"1RUCgYE6h0W3LUNDVfjIbwS63aU=\");\n_c = Visuals;\nexport default Visuals;\nvar _c;\n$RefreshReg$(_c, \"Visuals\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","Chart","jsxDEV","_jsxDEV","Visuals","_s","chartData","setChartData","datasets","budget","expense","backgroundColor","labels1","labels2","dataLoaded","setDataLoaded","dataExists","setDataExists","selectedMonth","setSelectedMonth","months","getRandomColor","previousColors","letters","color","i","Math","floor","random","includes","fetchData","url","updateFunction","token","localStorage","getItem","userId","res","get","headers","Authorization","data","length","updatedData","category","error","console","push","createChart","chartRef","type","labels","expenses","current","chart","label","borderColor","borderWidth","options","scales","x","stacked","y","destroy","expenseRef","chart1Ref","chart2Ref","chart3Ref","chart4Ref","chart5Ref","createPolarareaChart","dataSource","createGroupedBarChart","createRadarChart","createdonutChart","renderCharts","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","htmlFor","id","onChange","e","target","value","map","month","_c","$RefreshReg$"],"sources":["/Users/sathwikreddydanda/Desktop/NBAD/FinalProject/src/Visuals/visuals.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport './visuals.scss';\n\nfunction Visuals() {\n  const [chartData, setChartData] = useState({\n    datasets: [\n      { budget: [], expense: [], backgroundColor: [] },\n    ],\n    labels1: [],\n    labels2: [],\n  });\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [dataExists, setDataExists] = useState(false);\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const months = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December',\n  ];\n\n  function getRandomColor(previousColors) {\n    const letters = '0123456789ABCDEF';\n    let color;\n\n    do {\n      color = '#';\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n    } while (previousColors.includes(color));\n\n    return color;\n  }\n\n  const fetchData = async (url, updateFunction) => {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId');\n\n    try {\n      const res = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (res.data && res.data.length > 0) {\n        const updatedData = { ...chartData };\n        for (let i = 0; i < res.data.length; i++) {\n          updatedData.datasets[0].budget[i] = res.data[i].budget;\n          updatedData.datasets[0].expense[i] = res.data[i].expense;\n          updatedData.datasets[0].backgroundColor[i] = getRandomColor(chartData.datasets[0].backgroundColor);\n          updateFunction(updatedData, res.data[i].category);\n        }\n        setChartData(updatedData);\n        setDataExists(true);\n        setDataLoaded(true);\n      } else {\n        setDataExists(false);\n        setDataLoaded(true);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedMonth) {\n      const url = `http://localhost:3002/get-budgets/${localStorage.getItem('userId')}?month=${selectedMonth}`;\n      fetchData(url, (data, category) => {\n        data.labels1.push(category);\n      });\n    }\n  }, [selectedMonth]);\n\n  useEffect(() => {\n    if (selectedMonth) {\n      const url = `http://localhost:3002/get-expenses/${localStorage.getItem('userId')}?month=${selectedMonth}`;\n      fetchData(url, (data, category) => {\n        data.labels2.push(category);\n      });\n    }\n  }, [selectedMonth]);\n\n  const createChart = (chartRef, type, labels, budget, expenses) => {\n    if (chartRef.current) {\n      const chart = new Chart(chartRef.current, {\n        type: type,\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: 'Budget',\n              data: budget,\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 1,\n            },\n            {\n              label: 'Expenses',\n              data: expenses,\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\n              borderColor: 'rgba(255, 99, 132, 1)',\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          scales: { x: { stacked: false }, y: { stacked: false } },\n        },\n      });\n\n      return () => {\n        chart.destroy();\n      };\n    }\n  };\n\n  const chartRef = useRef(null);\n  const expenseRef = useRef(null);\n  const chart1Ref = useRef(null);\n  const chart2Ref = useRef(null);\n  const chart3Ref = useRef(null);\n  const chart4Ref = useRef(null);\n  const chart5Ref = useRef(null);\n\n  useEffect(() => createPolarareaChart(chartRef, dataSource.datasets[0].budget, dataSource.labels1), [dataSource]);\n  useEffect(() => createPolarareaChart(expenseRef, dataSource.datasets[0].expense, dataSource.labels2), [dataSource]);\n  useEffect(() => createGroupedBarChart(chart1Ref, dataSource.labels1, dataSource.datasets[0].budget, dataSource.datasets[0].expense), [dataSource]);\n  useEffect(() => createRadarChart(chart2Ref, dataSource.labels1, dataSource.datasets[0].budget, dataSource.datasets[0].expense), [dataSource]);\n  useEffect(() => createdonutChart(chart3Ref,  dataSource.datasets[0].budget,dataSource.labels1,), [dataSource]);\n  useEffect(() => createdonutChart(chart4Ref,  dataSource.datasets[0].expense,dataSource.labels1,), [dataSource]);\n  useEffect(() => createChart(chart5Ref, dataSource.labels1, dataSource.datasets[0].budget, dataSource.datasets[0].expense), [dataSource]);\n\n  const renderCharts = () => {\n    return (\n      <section>\n        <section className=\"chart-container\">\n          <article className=\"chart\">\n            <h2>PolarArea Chart - Budget</h2>\n            <canvas ref={chartRef} />\n          </article>\n          <article className=\"chart\">\n            <h2>PolarArea Chart - Expenses</h2>\n            <canvas ref={expenseRef} />\n          </article>\n          <article className=\"chart\">\n            <h2>Grouped Bar Chart</h2>\n            <canvas ref={chart1Ref} />\n          </article>\n          <article className=\"chart\">\n            <h2>Radar Chart</h2>\n            <canvas ref={chart2Ref} />\n          </article>\n        </section>\n        <section className=\"chart-container\">\n          <article className=\"chart\">\n            <h2>Donut Chart - Budgets</h2>\n            <canvas ref={chart3Ref} />\n          </article>\n          <article className=\"chart\">\n            <h2>Donut Chart - Expenses</h2>\n            <canvas ref={chart4Ref} />\n          </article>\n          <article className=\"chart\">\n            <h2>Combo Chart - Expenses</h2>\n            <canvas ref={chart5Ref} />\n          </article>\n        </section>\n      </section>\n    );\n  };\n  \n\n  return (\n    <main className=\"visuals-container\">\n      <div className=\"controls\">\n        <label htmlFor=\"months\">Select Month:</label>\n        <select id=\"months\" onChange={(e) => setSelectedMonth(e.target.value)} value={selectedMonth}>\n          <option value=\"\">Select Month</option>\n          {months.map((month) => (\n            <option key={month} value={month}>{month}</option>\n          ))}\n        </select>\n      </div>\n      {dataLoaded ? (\n        dataExists ? renderCharts() : <p>There is no sufficient data, please create some to display the charts.</p>\n      ) : <p>Loading...</p>}\n    </main>\n  );\n}\n\nexport default Visuals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}