{"ast":null,"code":"var _jsxFileName = \"/Users/sathwikreddydanda/Desktop/NBAD/FinalProject/src/ConfigureBudgets/visuals.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Visuals() {\n  _s();\n  const [dataSource, setDataSource] = useState({\n    datasets: [{\n      budget: [],\n      expense: [],\n      backgroundColor: []\n    }],\n    labels1: [],\n    labels2: []\n  });\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [dataExists, setDataExists] = useState(false);\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [months, setMonths] = useState(['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']);\n  function getRandomColor(previousColors) {\n    const letters = '0123456789ABCDEF';\n    let color;\n    do {\n      color = '#';\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n    } while (previousColors.includes(color));\n    return color;\n  }\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId');\n    if (selectedMonth) {\n      axios.get(`http://localhost:3002/get-budgets/${userId}?month=${selectedMonth}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(function (res) {\n        if (res.data && res.data.length > 0) {\n          const updateData = {\n            ...dataSource\n          };\n          for (var i = 0; i < res.data.length; i++) {\n            updateData.datasets[0].budget[i] = res.data[i].budget;\n            updateData.datasets[0].backgroundColor[i] = getRandomColor(dataSource.datasets[0].backgroundColor);\n            updateData.labels1[i] = res.data[i].category;\n          }\n          setDataSource(updateData);\n          setDataExists(true);\n          setDataLoaded(true);\n        } else {\n          setDataExists(false);\n          setDataLoaded(true);\n        }\n      });\n    }\n  }, [selectedMonth]);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId');\n    if (selectedMonth) {\n      axios.get(`http://localhost:3002/get-expenses/${userId}?month=${selectedMonth}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(function (res) {\n        if (res.data && res.data.length > 0) {\n          const updateExpenses = {\n            ...dataSource\n          };\n          for (var i = 0; i < res.data.length; i++) {\n            updateExpenses.datasets[0].expense[i] = res.data[i].expense;\n            updateExpenses.datasets[0].backgroundColor[i] = getRandomColor(dataSource.datasets[0].backgroundColor);\n            updateExpenses.labels2[i] = res.data[i].category;\n          }\n          setDataSource(updateExpenses);\n          setDataExists(true);\n          setDataLoaded(true);\n        } else {\n          setDataExists(false);\n          setDataLoaded(true);\n        }\n      });\n    }\n  }, [selectedMonth]);\n  const createPolarareaChart = (chartRef, data, labels) => {\n    if (chartRef.current) {\n      const chart = new Chart(chartRef.current, {\n        type: 'polarArea',\n        data: {\n          datasets: [{\n            data: data,\n            backgroundColor: dataSource.datasets[0].backgroundColor\n          }],\n          labels: labels\n        }\n      });\n      return () => {\n        chart.destroy();\n      };\n    }\n  };\n  const createGroupedBarChart = (chartRef, labels, budget, expenses) => {\n    if (chartRef.current) {\n      const chart = new Chart(chartRef.current, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'Budget',\n            data: budget,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }, {\n            label: 'Expense',\n            data: expenses,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              stacked: false\n            },\n            y: {\n              stacked: false\n            }\n          }\n        }\n      });\n      return () => {\n        chart.destroy();\n      };\n    }\n  };\n  const createRadarChart = (chartRef, labels, budget, expenses) => {\n    if (chartRef.current) {\n      const chart = new Chart(chartRef.current, {\n        type: 'radar',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'Budget',\n            data: budget,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }, {\n            label: 'Expenses',\n            data: expenses,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 1\n          }]\n        }\n      });\n      return () => {\n        chart.destroy();\n      };\n    }\n  };\n  const createdonutChart = (chartRef, data, labels) => {\n    if (chartRef.current) {\n      const chart = new Chart(chartRef.current, {\n        type: 'doughnut',\n        data: {\n          datasets: [{\n            data: data,\n            backgroundColor: dataSource.datasets[0].backgroundColor\n          }],\n          labels: labels\n        }\n      });\n      return () => {\n        chart.destroy();\n      };\n    }\n  };\n  const createChart = (chartRef, labels, budget, expenses) => {\n    if (chartRef.current) {\n      const chart = new Chart(chartRef.current, {\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'Budget',\n            type: 'bar',\n            data: budget,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }, {\n            label: 'Expenses',\n            type: 'line',\n            data: expenses,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 1\n          }]\n        }\n      });\n      return () => {\n        chart.destroy();\n      };\n    }\n  };\n  const chartRef = useRef(null);\n  const expenseRef = useRef(null);\n  const chart1Ref = useRef(null);\n  const chart2Ref = useRef(null);\n  const chart3Ref = useRef(null);\n  const chart4Ref = useRef(null);\n  const chart5Ref = useRef(null);\n  useEffect(() => createPolarareaChart(chartRef, dataSource.datasets[0].budget, dataSource.labels1), [dataSource]);\n  useEffect(() => createPolarareaChart(expenseRef, dataSource.datasets[0].expense, dataSource.labels2), [dataSource]);\n  useEffect(() => createGroupedBarChart(chart1Ref, dataSource.labels1, dataSource.datasets[0].budget, dataSource.datasets[0].expense), [dataSource]);\n  useEffect(() => createRadarChart(chart2Ref, dataSource.labels1, dataSource.datasets[0].budget, dataSource.datasets[0].expense), [dataSource]);\n  useEffect(() => createdonutChart(chart3Ref, dataSource.datasets[0].budget, dataSource.labels1), [dataSource]);\n  useEffect(() => createdonutChart(chart4Ref, dataSource.datasets[0].expense, dataSource.labels1), [dataSource]);\n  useEffect(() => createChart(chart5Ref, dataSource.labels1, dataSource.datasets[0].budget, dataSource.datasets[0].expense), [dataSource]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"center\",\n    id: \"main\",\n    \"aria-label\": \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"months\",\n        children: \"Select Month:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"months\",\n        onChange: e => setSelectedMonth(e.target.value),\n        value: selectedMonth,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), months.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: month,\n          children: month\n        }, month, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), dataLoaded ? dataExists ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"polarArea Chart - Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chartRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"polarArea Chart - Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: expenseRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Grouped Bar Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chart1Ref\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Radar Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chart2Ref\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Donught Chart- Budgets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chart3Ref\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Donught Chart - Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chart4Ref\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"combo Chart - Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chart5Ref\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Data is not present. Please enter the data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n}\n_s(Visuals, \"Y4scri0gKO1ChYI8W7fVutmeeHw=\");\n_c = Visuals;\nexport default Visuals;\nvar _c;\n$RefreshReg$(_c, \"Visuals\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","Chart","jsxDEV","_jsxDEV","Visuals","_s","dataSource","setDataSource","datasets","budget","expense","backgroundColor","labels1","labels2","dataLoaded","setDataLoaded","dataExists","setDataExists","selectedMonth","setSelectedMonth","months","setMonths","getRandomColor","previousColors","letters","color","i","Math","floor","random","includes","token","localStorage","getItem","userId","get","headers","Authorization","then","res","data","length","updateData","category","updateExpenses","createPolarareaChart","chartRef","labels","current","chart","type","destroy","createGroupedBarChart","expenses","label","borderColor","borderWidth","options","scales","x","stacked","y","createRadarChart","createdonutChart","createChart","expenseRef","chart1Ref","chart2Ref","chart3Ref","chart4Ref","chart5Ref","className","id","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","month","ref","_c","$RefreshReg$"],"sources":["/Users/sathwikreddydanda/Desktop/NBAD/FinalProject/src/ConfigureBudgets/visuals.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\n\nfunction Visuals() {\n  const [dataSource, setDataSource] = useState({\n    datasets: [\n      {\n        budget: [],\n        expense: [],\n        backgroundColor: [],\n      },\n    ],\n    labels1: [],\n    labels2: [],\n  });\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [dataExists, setDataExists] = useState(false);\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [months, setMonths] = useState([\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ]);\n\n  function getRandomColor(previousColors) {\n    const letters = '0123456789ABCDEF';\n    let color;\n\n    do {\n      color = '#';\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n    } while (previousColors.includes(color));\n\n    return color;\n  }\n\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId');\n\n    if (selectedMonth) {\n      axios\n        .get(`http://localhost:3002/get-budgets/${userId}?month=${selectedMonth}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        .then(function (res) {\n          if (res.data && res.data.length > 0) {\n            const updateData = { ...dataSource };\n            for (var i = 0; i < res.data.length; i++) {\n              updateData.datasets[0].budget[i] = res.data[i].budget;\n              updateData.datasets[0].backgroundColor[i] = getRandomColor(dataSource.datasets[0].backgroundColor);\n              updateData.labels1[i] = res.data[i].category;\n            }\n            setDataSource(updateData);\n            setDataExists(true);\n            setDataLoaded(true);\n          } else {\n            setDataExists(false);\n            setDataLoaded(true);\n          }\n        });\n    }\n  }, [selectedMonth]);\n\n  useEffect(()=>{\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId');\n\n    if (selectedMonth) {\n      axios\n        .get(`http://localhost:3002/get-expenses/${userId}?month=${selectedMonth}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        .then(function (res) {\n          if (res.data && res.data.length > 0) {\n            const updateExpenses = { ...dataSource };\n            for (var i = 0; i < res.data.length; i++) {\n              updateExpenses.datasets[0].expense[i] = res.data[i].expense;\n              updateExpenses.datasets[0].backgroundColor[i] = getRandomColor(dataSource.datasets[0].backgroundColor);\n              updateExpenses.labels2[i] = res.data[i].category;\n            }\n            setDataSource(updateExpenses);\n            setDataExists(true);\n            setDataLoaded(true);\n          } else {\n            setDataExists(false);\n            setDataLoaded(true);\n          }\n        });\n    }\n   \n  },[selectedMonth])\n\n  \n  const createPolarareaChart = (chartRef, data, labels) => {\n    if (chartRef.current) {\n      const chart = new Chart(chartRef.current, {\n        type: 'polarArea',\n        data: {\n          datasets: [\n            {\n              data: data,\n              backgroundColor: dataSource.datasets[0].backgroundColor,\n            },\n          ],\n          labels: labels,\n        },\n      });\n\n      return () => {\n        chart.destroy();\n      };\n    }\n  };\n\n  const createGroupedBarChart = (chartRef, labels, budget, expenses) => {\n    if (chartRef.current) {\n      const chart = new Chart(chartRef.current, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: 'Budget',\n              data: budget,\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 1,\n            },\n            {\n              label: 'Expense',\n              data: expenses,\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\n              borderColor: 'rgba(255, 99, 132, 1)',\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          scales: {\n            x: {\n              stacked: false,\n            },\n            y: {\n              stacked: false,\n            },\n          },\n        },\n      });\n\n      return () => {\n        chart.destroy();\n      };\n    }\n  };\n\n  const createRadarChart = (chartRef, labels, budget, expenses) => {\n    if (chartRef.current) {\n      const chart = new Chart(chartRef.current, {\n        type: 'radar',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: 'Budget',\n              data: budget,\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 1,\n            },\n            {\n              label: 'Expenses',\n              data: expenses,\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\n              borderColor: 'rgba(255, 99, 132, 1)',\n              borderWidth: 1,\n            },\n          ],\n        },\n      });\n\n      return () => {\n        chart.destroy();\n      };\n    }\n  };\n\n\n  const createdonutChart = (chartRef, data, labels) => {\n    if (chartRef.current) {\n      const chart = new Chart(chartRef.current, {\n        type: 'doughnut',\n        data: {\n          datasets: [\n            {\n              data: data,\n              backgroundColor: dataSource.datasets[0].backgroundColor,\n            },\n          ],\n          labels: labels,\n        },\n      });\n\n      return () => {\n        chart.destroy();\n      };\n    }\n  };\n\n  const createChart = (chartRef, labels, budget, expenses) => {\n    if (chartRef.current) {\n      const chart = new Chart(chartRef.current, {\n        \n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: 'Budget',\n              type:'bar',\n              data: budget,\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 1,\n            },\n            {\n              label: 'Expenses',\n              type:'line',\n              data: expenses,\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\n              borderColor: 'rgba(255, 99, 132, 1)',\n              borderWidth: 1,\n            },\n          ],\n        },\n      });\n\n      return () => {\n        chart.destroy();\n      };\n    }\n  };\n\n\n\n\n  const chartRef = useRef(null);\n  const expenseRef = useRef(null);\n  const chart1Ref = useRef(null);\n  const chart2Ref = useRef(null);\n  const chart3Ref = useRef(null);\n  const chart4Ref = useRef(null);\n  const chart5Ref = useRef(null);\n  \n\n  useEffect(() => createPolarareaChart(chartRef, dataSource.datasets[0].budget, dataSource.labels1), [dataSource]);\n  useEffect(() => createPolarareaChart(expenseRef, dataSource.datasets[0].expense, dataSource.labels2), [dataSource]);\n  useEffect(() => createGroupedBarChart(chart1Ref, dataSource.labels1, dataSource.datasets[0].budget, dataSource.datasets[0].expense), [dataSource]);\n  useEffect(() => createRadarChart(chart2Ref, dataSource.labels1, dataSource.datasets[0].budget, dataSource.datasets[0].expense), [dataSource]);\n  useEffect(() => createdonutChart(chart3Ref,  dataSource.datasets[0].budget,dataSource.labels1,), [dataSource]);\n  useEffect(() => createdonutChart(chart4Ref,  dataSource.datasets[0].expense,dataSource.labels1,), [dataSource]);\n  useEffect(() => createChart(chart5Ref, dataSource.labels1, dataSource.datasets[0].budget, dataSource.datasets[0].expense), [dataSource]);\n  \n  return (\n    <main className=\"center\" id=\"main\" aria-label=\"main\">\n      <div>\n        <label htmlFor=\"months\">Select Month:</label>\n        <select id=\"months\" onChange={(e) => setSelectedMonth(e.target.value)} value={selectedMonth}>\n          <option value=\"\">Select Month</option>\n          {months.map((month) => (\n            <option key={month} value={month}>\n              {month}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {dataLoaded ? (\n             dataExists ? (\n              <section>\n      <section className=\"chart-container\">\n        <article className=\"chart\">\n          <h1>polarArea Chart - Budget</h1>\n          <p>\n            <canvas ref={chartRef} />\n          </p>\n        </article>\n        <article className=\"chart\">\n          <h1>polarArea Chart - Expenses</h1>\n          <p>\n            <canvas ref={expenseRef} />\n          </p>\n        </article>\n        <article className=\"chart\">\n          <h1>Grouped Bar Chart</h1>\n          <p>\n            <canvas ref={chart1Ref} />\n          </p>\n        </article>\n        <article className=\"chart\">\n          <h1>Radar Chart</h1>\n          <p>\n            <canvas ref={chart2Ref} />\n          </p>\n        </article>\n       \n      </section>\n     \n       <section className=\"chart-container\">\n       <article className=\"chart\">\n          <h1>Donught Chart- Budgets</h1>\n          <p>\n            <canvas ref={chart3Ref} />\n          </p>\n        </article>\n       <article className=\"chart\">\n         <h1>Donught Chart - Expenses</h1>\n         <p>\n           <canvas ref={chart4Ref} />\n         </p>\n       </article>\n       <article className=\"chart\">\n         <h1>combo Chart - Expenses</h1>\n         <p>\n           <canvas ref={chart5Ref} />\n         </p>\n       </article>\n       </section>\n       </section>\n     \n       ) : (\n        <div>\n          <p>Data is not present. Please enter the data.</p>\n        </div>\n       )\n         \n       ) : (\n        <div>\n          <p>Loading...</p>\n        </div>\n      )}\n    </main>\n  );\n}\n\nexport default Visuals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}